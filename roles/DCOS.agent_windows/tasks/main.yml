- name: Windows | Defining DC/OS by using 'version' or, more specifically, 'image_commit'
  set_fact:
     dcos_version_specifier: "{{ dcos_version | default('1.13') }}"
     ansible_password: '{{ hostvars[inventory_hostname].pass }}'


- name: Windows | Create folders and sub folders for dcos_version
  file:
    path: /dcos/files/{{dcos_version_specifier}}
    state: directory
  delegate_to: localhost


- name: Windows | Get vmesos-binaries.zip to localhost
  get_url:
    url: "{{ url_to_mesosbin }}"
    dest: "/dcos/files/{{ dcos_version_specifier }}/mesos-binaries.zip"
    mode: '0440'
  delegate_to: localhost


- name: Windows | Initialisation windows-node (with install.ps1)
  win_copy: src=/dcos/files/{{ item }} dest=C:\dcos\
  with_items:
      - "{{ dcos_version_specifier }}/mesos-binaries.zip"


- name: Windows | Install vcredist140
  win_chocolatey:
    name: vcredist140
    state: present


- name: Windows | Unzip a mesos-binaries file
  win_unzip:
    src: C:\dcos\mesos-binaries.zip
    dest: C:\dcos\mesos-binaries
    creates: C:\dcos\mesos-binaries


- name: Windows | Create sub directories for Mesos agent
  win_file:
      path: C:\dcos\{{ item }}
      state: directory
  with_items:
        - work
        - images
        - mesos-logs


- name: Windows | Create start script
  win_lineinfile:
    path: C:\dcos\start.ps1
    create: yes
    line: C:\dcos\mesos-binaries\mesos-agent.exe --master="zk://{{zookeeper}}/mesos" --appc_store_dir=\\?\C:\dcos\images\ --work_dir=\\?\C:\dcos\work\ --runtime_dir=\\?\C:\dcos\work\ --isolation="windows/cpu,windows/mem,filesystem/windows" --containerizers="mesos,docker" --launcher_dir=\\?\C:\dcos\mesos-binaries\ --log_dir=\\?\C:\dcos\mesos-logs\ --attributes="os:windows" --ip={{inventory_hostname}} --hostname=$(Invoke-RestMethod -uri http://169.254.169.254/latest/meta-data/public-ipv4)


- name: Windows | Register job for mesos-agent
  win_scheduled_task:
    name: mesos-agent
    description: mesos-agent
    logon_type: password
    actions:
    - path: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
      arguments:  -ExecutionPolicy Unrestricted -NonInteractive -File C:\dcos\start.ps1
    triggers:
    - type: boot
    restart_count: "{{ mesos_agent_restart_count }}"
    restart_interval: "{{ mesos_agent_restart_interval }}"
    username: "{{ system_user }}"
    password: "{{ ansible_password }}"
    run_level: highest
    state: present
  notify:
    - reboot the host